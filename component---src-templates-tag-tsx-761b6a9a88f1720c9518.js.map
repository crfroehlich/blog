{"version":3,"sources":["webpack:///./src/templates/Tag.tsx"],"names":["getCardStyles","makeStyles","theme","createStyles","root","maxWidth","color","palette","text","secondary","backgroundColor","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","complex","expandOpen","paper","padding","spacing","textAlign","grid","flexGrow","description","width","whiteSpace","overflow","textOverflow","GridCard","_ref","_edge$node","_edge$node$frontmatte","_edge$node$frontmatte2","_clsx","edge","idx","_useState","useState","expanded","setExpanded","classes","Grid","item","xs","key","node","fields","id","Card","className","variant","CardActionArea","onClick","navigate","slug","fixed","frontmatter","background","childImageSharp","CardContent","Typography","gutterBottom","component","title","CardActions","disableSpacing","IconButton","DisplayDate","style","date","Date","Icon","icon","Collapse","in","timeout","unmountOnExit","paragraph","excerpt","replace","Tag","props","edges","data","allMdx","pageContext","PageWrapper","PageTitle","StyledMainWrapper","container","map","e","i","tagQuery"],"mappings":"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","file":"component---src-templates-tag-tsx-761b6a9a88f1720c9518.js","sourcesContent":["import { Card, CardActionArea, CardActions, CardContent, Collapse, createStyles, Grid, IconButton, makeStyles, Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { navigate } from 'gatsby';\nimport Img from 'gatsby-image';\nimport React, { useState } from 'react';\nimport { DisplayDate, Icon, PageTitle } from '../components';\nimport { PageWrapper, StyledMainWrapper } from '../styles';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nvar getCardStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      maxWidth: 360,\n      color: theme.palette.text.secondary,\n      backgroundColor: '#d1d2d3'\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.complex\n      })\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    },\n    paper: {\n      padding: theme.spacing(1),\n      textAlign: 'left',\n      color: theme.palette.text.secondary\n    },\n    grid: {\n      flexGrow: 1\n    },\n    description: {\n      width: '250',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }\n  });\n});\n\nvar GridCard = function GridCard(_ref) {\n  var _edge$node, _edge$node$frontmatte, _edge$node$frontmatte2, _clsx;\n\n  var edge = _ref.edge,\n      idx = _ref.idx;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var classes = getCardStyles();\n\n  var handleExpandClick = function handleExpandClick() {\n    return setExpanded(!expanded);\n  };\n\n  var handleNavigate = function handleNavigate() {\n    return navigate(edge.node.fields.slug);\n  };\n\n  return ___EmotionJSX(Grid, {\n    item: true,\n    xs: true,\n    key: \"gridcell_\" + idx + \"_\" + edge.node.fields.id\n  }, ___EmotionJSX(Card, {\n    className: classes.root,\n    variant: \"elevation\"\n  }, ___EmotionJSX(CardActionArea, {\n    onClick: handleNavigate\n  }, ___EmotionJSX(Img, {\n    fixed: (_edge$node = edge.node) === null || _edge$node === void 0 ? void 0 : (_edge$node$frontmatte = _edge$node.frontmatter) === null || _edge$node$frontmatte === void 0 ? void 0 : (_edge$node$frontmatte2 = _edge$node$frontmatte.background) === null || _edge$node$frontmatte2 === void 0 ? void 0 : _edge$node$frontmatte2.childImageSharp.fixed\n  }), ___EmotionJSX(CardContent, null, ___EmotionJSX(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\"\n  }, edge.node.fields.title), ___EmotionJSX(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    className: classes.description\n  }, edge.node.fields.description))), ___EmotionJSX(CardActions, {\n    disableSpacing: true\n  }, ___EmotionJSX(IconButton, null, ___EmotionJSX(DisplayDate, {\n    style: {\n      color: '#0000008A'\n    },\n    date: new Date(edge.node.fields.date)\n  })), ___EmotionJSX(IconButton, {\n    className: clsx(classes.expand, (_clsx = {}, _clsx[classes.expandOpen] = expanded, _clsx)),\n    onClick: handleExpandClick,\n    \"aria-expanded\": expanded,\n    \"aria-label\": \"show more\"\n  }, expanded ? ___EmotionJSX(Icon, {\n    icon: 'angle-up'\n  }) : ___EmotionJSX(Icon, {\n    icon: 'angle-down'\n  }))), ___EmotionJSX(Collapse, {\n    in: expanded,\n    timeout: \"auto\",\n    unmountOnExit: true\n  }, ___EmotionJSX(CardContent, null, ___EmotionJSX(Typography, {\n    paragraph: true\n  }, edge.node.excerpt.replace('\\n', '<br>'))))));\n};\n\nexport var Tag = function Tag(props) {\n  var edges = props.data.allMdx.edges,\n      title = props.pageContext.title;\n  var classes = getCardStyles();\n  return ___EmotionJSX(PageWrapper, null, ___EmotionJSX(PageTitle, {\n    title: title\n  }), ___EmotionJSX(StyledMainWrapper, null, ___EmotionJSX(\"div\", {\n    className: classes.grid\n  }, ___EmotionJSX(Grid, {\n    container: true,\n    spacing: 3\n  }, edges.map(function (e, i) {\n    return ___EmotionJSX(GridCard, {\n      edge: e,\n      idx: i,\n      key: \"gridcard_\" + i + \"_\" + e.node.fields.id\n    });\n  })))));\n};\nexport default Tag;\nexport var tagQuery = \"2981809697\";"],"sourceRoot":""}