{"componentChunkName":"component---src-templates-article-tsx","path":"/2012/performance-determinism-vs","result":{"data":{"mdx":{"fields":{"id":"7f107ddf-6e2c-52c2-aa68-83baa7e796cd","title":"Performance! Determinism. Vs?","slug":"/2012/performance-determinism-vs","date":"2012-01-24T00:00:00.000Z","tags":["code","measurements","speed"],"img":"/quarter_mile_at_a_time.jpg"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"1/24/2012\",\n  \"description\": \"[David Ungar]httpenwikipediaorgwikiDavidUngar cocreator of [Self]httpselflanguageorg the forefather ...\",\n  \"draft\": false,\n  \"img\": \"quarter_mile_at_a_time.jpg\",\n  \"tags\": [\"code\", \"measurements\", \"speed\"],\n  \"title\": \"Performance! Determinism. Vs?\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://en.wikipedia.org/wiki/David_Ungar\"\n  }), \"David Ungar\"), \" (co-creator of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://selflanguage.org/\"\n  }), \"Self\"), \", the forefather to my favorite language, JavaScript) had an interesting talk at SPLASH 2011, which is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://my-inner-voice.blogspot.com/2012/01/many-core-processors-everything-you.html\"\n  }), \"nicely summarized here\"), \"\\xA0(post-talk \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://channel9.msdn.com/Blogs/Charles/SPLASH-2011-David-Ungar-Self-ManyCore-and-Embracing-Non-Determinism\"\n  }), \"interview here\"), \").\"), mdx(\"p\", null, \"There are two\\xA0predicate\\xA0assumptions in this line of thinking. First, that in the end, we will always value performance over everything else (data integrity, reliability, determinism). Second, that we must sacrifice some level of\\xA0determinism\\xA0if we want to increase performance.\"), mdx(\"p\", null, \"The JavaScript example is a good one.\"), mdx(\"p\", null, \"\\u201CWhy would you write critical business logic in an untyped language?\\u201D\"), mdx(\"p\", null, \"\\u201CBecause, by sacrificing static typing, you can achieve performance that is otherwise impossible to attain.\\u201D\"), mdx(\"p\", null, \"Of course, JavaScript itself \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://hacks.mozilla.org/2012/01/javascript-on-the-server-growing-the-node-js-community/\"\n  }), \"isn\\u2019t even the Wild West\"), \". It\\u2019s serial; it\\u2019s single-threaded. It poses few of the suggested risks of operating in thousand core environment, where (if we are to believe Mr. Ungar) we must stare into the abyss.\"), mdx(\"p\", null, \"The line of thinking is provocative, and it\\u2019s led me to wonder if it doesn\\u2019t speak to something more basic: we must constantly challenge our assumptions about what is the most performant way to program.\"), mdx(\"p\", null, \"Recently, Node.js entered the tweet-o-sphere and has garnered enough attention that even Microsoft has built support for Node into IIS and their Azure platform. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://www.hanselman.com/blog/InstallingAndRunningNodejsApplicationsWithinIISOnWindowsAreYouMad.aspx\"\n  }), \"Are they mad\"), \"?\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://radar.oreilly.com/2011/07/what-is-node.html\"\n  }), \"In explaining the relevance of Node to broader technology groups\"), \", Brett McLaughlin notes:\"), mdx(\"p\", null, \"\\u201CThere\\u2019s another web pattern at work here, and it\\u2019s probably far more important than whether you use Node or not, and how evented your web applications are. It\\u2019s simply this: use different solutions for different problems. Even better, use the right solution for a particular problem, regardless of whether that\\u2019s the solution you\\u2019ve been using for all your other problems.\\u201D\"), mdx(\"p\", null, \"That, to me, is the most elegant subversion of Mr. Ungar\\u2019s thesis. We may have to abandon determinism to solve certain problems, but we can also abandon it in a deterministic way.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"7f107ddf-6e2c-52c2-aa68-83baa7e796cd","slug":"/2012/performance-determinism-vs","previous":{"fields":{"id":"0dea3e98-498c-5970-8987-ca06a4aec80c","title":"Physical Books (and Such)","slug":"/2012/physical-books-and-such","date":"2012-05-24T00:00:00.000Z","tags":["inventory","meandering"],"img":"/minecraft_desert_island.png"},"tableOfContents":{},"parent":{"relativePath":"2012/physical-books-and-such.md"},"frontmatter":{"title":"Physical Books (and Such)","subtitle":null,"date":"5/24/2012","tags":["inventory","meandering"],"img":"minecraft_desert_island.png"}},"next":{"fields":{"id":"c621b266-db3c-54ee-9adc-53a2c2176ad3","title":"Out With the Old, In With the New (Profile)","slug":"/2012/out_with_the_old_in_with_the_new_profile","date":"2012-01-24T00:00:00.000Z","tags":["logging","social","media"],"img":"/immaculate_conception.jpg"},"tableOfContents":{},"parent":{"relativePath":"2012/out_with_the_old_in_with_the_new_profile.md"},"frontmatter":{"title":"Out With the Old, In With the New (Profile)","subtitle":null,"date":"01/24/2012","tags":["logging","social","media"],"img":"immaculate_conception.jpg"}},"pageTags":[{"name":"code","count":20},{"name":"measurements","count":1},{"name":"speed","count":1}],"toc":{"type":"Article"},"title":"Performance! Determinism. Vs?"}},"staticQueryHashes":["1955480686"]}